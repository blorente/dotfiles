# Set locale correctly
export LC_ALL=en_US.UTF-8  
export LANG=en_US.UTF-8

# Plugins
#source ~/completions.zsh
source ~/dotfiles/aliases/header.sh

if [[ -f "~/dotfiles/configs/hidden/zshrc.*" ]]; then
  source ~/dotfiles/configs/hidden/zshrc.*
fi

# fzf config
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS='--height 20% --layout=reverse --border'


# Powerlevel10k customization
#typeset -g POWERLEVEL9K_VCS_HIDE_TAGS=true

## Persistent history
HISTSIZE=15000              #How many lines of history to keep in memory
HISTFILE=~/.zsh_history     #Where to save history to disk
SAVEHIST=15000              #Number of history entries to save to disk
setopt    appendhistory     #Append history to the history file (no overwriting)
setopt    sharehistory      #Share history across terminals
setopt    incappendhistory  #Immediately append to the history file, not just when a term is killed

# Path updates
PATH="$PATH:/usr/local/bin"
PATH="$PATH:$HOME/bin"
PATH="$PATH:$HOME/.local/bin"
# Krew is the kubectl plugin manager.
# Ref: https://krew.sigs.k8s.io/docs/user-guide/setup/install/
PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

## Node Version Manager
#export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
#alias load_nvm="[ -s \"$NVM_DIR/nvm.sh\" ] && \. \"$NVM_DIR/nvm.sh\"" # This loads nvm"

# Editor config
export EDITOR=nvim

# Git Manager Stuff
alias gog='cd $(gtm find)'
alias ggo='cd $(gtm find)'
alias gop="gtm find "
function open_repo_in_browser() {
  prefix=$1
  remote=$2
  repo_path=$(gtm find "$1")
  pushd "${repo_path}"
  url=$(git remote -v | fzf --query "${remote}" | awk '{print $2}')
  open "${url}"
  popd
}
alias gnav='open_repo_in_browser '

bindkey -e
bindkey "^[a" beginning-of-line
bindkey "^[e" end-of-line
bindkey "[b" backward-word
bindkey "[f" forward-word
bindkey "^[[3~" delete-char

export COURSIER_CREDENTIALS="$HOME/.config/coursier/credentials.properties"

os=$( uname -s )
arch=$( uname -m )
if [[ "${arch}" == "arm64" ]]; then
  brew_prefix="/opt/homebrew/opt"
else
  brew_prefix="/opt/brew/opt"
fi

if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

  autoload -Uz compinit
  compinit
fi

# Go setup
export GOPATH=$HOME/go
# Go setup
export GOPATH=$HOME/go
if [[ "${os}" == "Darwin" ]]; then
  export GOROOT="${brew_prefix}/golang/libexec"
else
  export GOROOT=""
fi

export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"

# Java setup
if [[ "${os}" == "Darwin" ]]; then
  export JAVA_HOME="$(/usr/libexec/java_home)"
else
  echo "Couldn't set java home, you're not on macOS!"
fi

# Make libraries installed with brew available
# Works for openssl, SDL2, all that C++ stuff.
export LIBRARY_PATH="$LIBRARY_PATH:/opt/local/lib/:$(brew --prefix)/lib/"

# Starship prompt
# https://starship.rs/presets/
eval "$(starship init zsh)"

# zoxide, a rust-based 'cd' replacement
# https://github.com/ajeetdsouza/zoxide
eval "$(zoxide init zsh)"

# Maven stuff to show my username in Gradle Enterprise / Develocity builds
declare -x MAVEN_OPTS="-Duser.name=blorente"


extra_file="$HOME/.config/zshrc_extra"
if [ -f "$extra_file" ]; then
  source "$extra_file"
fi
