""""""""""""""""""""
" Configuration
""""""""""""""""""""

syntax on " Syntax highlighting
colorscheme dracula
"filetype plugin indent on
set wrap " Wrap lines
set ttyfast
set mouse= " Allow clicking with the mouse
set laststatus=2
set number " Show line numbers
set incsearch
set hlsearch
set hidden " Don't force save on buffer switch
set tabstop=2 " Show existing tab with 2 spaces width
set expandtab " On pressing tab, insert 2 spaces

set foldmethod=indent " Fold all code based on indent
set foldenable " Fold all files automatically on open
set foldnestmax=5 " Nest a maximum of 5 times
set shiftwidth=2 " Fold starting from 2 spaces

""""""""""""""""""""
" Plugins
""""""""""""""""""""

" For now we use vim-plug (https://github.com/junegunn/vim-plug)
call plug#begin('~/.vim/my_plugins')
" Ripgrep integration
Plug 'jremmen/vim-ripgrep'
" Dracula theme
Plug 'dracula/vim', { 'as': 'dracula' }
" fzf - Find files easily
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Use release branch (Recommend)
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" Install Nerdtree
Plug 'preservim/nerdtree'

call plug#end()

""""""""""""""""""""
" Keymaps
""""""""""""""""""""

" Leader aliases for buffer navigation
let mapleader = " "

" Open Nerdtree
map <Leader>t :NERDTreeToggle<CR>

" List buffers
nmap <Leader>l :ls <cr>

" Switch Buffer
nmap <Leader>1 :1b<cr>
nmap <Leader>2 :2b<cr>
nmap <Leader>3 :3b<cr>
nmap <Leader>4 :4b<cr>
nmap <Leader>5 :5b<cr>
nmap <Leader>6 :6b<cr>
nmap <Leader>7 :7b<cr>
nmap <Leader>8 :8b<cr>
nmap <Leader>9 :9b<cr>

" Easier : (Leader+;)
nmap <Leader><Leader> :

" Cycle through buffers
:nnoremap <S-Tab> :bprevious<CR>:redraw<CR>:ls<CR>
:nnoremap <Tab> :bnext<CR>:redraw<CR>:ls<CR>

" Map fzf to Ctrl-P
:nnoremap <C-p> :GFiles<CR>

" Map Rg for easy access
:nnoremap <C-S-f> :Rg 

" Map :W to :w. This is annoying
:command W w
:command Q q

""""""""""""""""""""
" Language Server
""""""""""""""""""""

"let g:LanguageClient_serverCommands = {
"    \ 'python': ['/Library/Frameworks/Python.framework/Versions/3.7/bin/pyls'],
"    \ 'rust': ['rustup', 'run', 'stable', 'rls']
"    \ }
"
"" LSClient mappings
""
"" Show context menu
"nnoremap <F5> :call LanguageClient_contextMenu()<CR>
"
"" Go to definition
"nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
"
" Remap keys for gotos
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)

" Remap for rename current word
nmap <leader>rn <Plug>(coc-rename)

"""""""""""""""""""""
" Completion
"""""""""""""""""""""
" Use tab for trigger completion with characters ahead and navigate.
" Use command ':verbose imap <tab>' to make sure tab is not mapped by other plugin.
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction
